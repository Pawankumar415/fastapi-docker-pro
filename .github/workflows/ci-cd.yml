name: Docker Build and Push CI/CD

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Builds the FastAPI image and pushes it to Docker Hub (Continuous Integration)
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets (CI)
        run: |
          # These secrets are used by the Dockerfile during the build phase if needed.
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
            ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ github.sha }}

      - name: Confirm Build and Push
        run: echo "✅ Docker image successfully built and pushed!"

  # ---------------------------------------------------------------------
  # Job 2: Deploys the latest image to the local server (Continuous Deployment)
  # ---------------------------------------------------------------------
  deploy_to_local:
    runs-on: self-hosted
    needs: [build_and_push_image] # Waits for Job 1 to finish
    
    # 💥 CRITICAL FIX: The entire 'defaults' section is removed as it was causing the path error.
    
    steps:
      - name: Checkout code (on the self-hosted runner)
        uses: actions/checkout@v4
        
      # ⚠️ IMPORTANT: Add 'shell: bash' to the run steps to handle spaces in the repository path.
      - name: Create runtime .env file
        shell: bash
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env

      - name: Pull and Recreate Containers
        shell: bash
        run: |
          echo "Pulling latest image and deploying..."
          docker-compose pull
          docker-compose up -d --force-recreate

      - name: Deployment Confirmed
        run: echo "🎉 Deployment successful! Containers have been restarted."

